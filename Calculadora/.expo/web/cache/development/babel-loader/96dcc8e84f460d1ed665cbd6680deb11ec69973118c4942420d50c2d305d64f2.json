{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport clickSound from \"./sounds/click.wav\";\nimport Display from \"./display\";\nimport Buttons from \"./buttons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar states = {\n  valueScreen: \"\",\n  result: 0,\n  operated: false,\n  point: false\n};\nexport default function App() {\n  var _useState = useState(states.valueScreen),\n    _useState2 = _slicedToArray(_useState, 2),\n    vscreen = _useState2[0],\n    setVscreen = _useState2[1];\n  var _useState3 = useState(states.result),\n    _useState4 = _slicedToArray(_useState3, 2),\n    vres = _useState4[0],\n    setVres = _useState4[1];\n  var addDigit = function addDigit(d) {\n    if (d == \"+\" || d == \"-\" || d == \"/\" || d == \"*\") {\n      states.point = false;\n    }\n    if (d == \".\" && !states.point) {\n      states.point = true;\n      states.operated = false;\n    } else if (d == \".\" && states.point) {\n      return;\n    }\n    if ((d == \"+\" || d == \"-\" || d == \"/\" || d == \"*\") && states.operated) {\n      states.valueScreen = states.result;\n      states.result = 0;\n    }\n    states.valueScreen = states.valueScreen + d;\n    setVscreen(states.valueScreen);\n    setVres(states.result);\n    states.operated = false;\n    var audio = new Audio(clickSound);\n    audio.volume = 0.3;\n    audio.play();\n  };\n  var clearScreen = function clearScreen() {\n    states = {\n      valueScreen: \"\",\n      result: 0,\n      operated: false,\n      point: false\n    };\n    setVscreen(states.valueScreen);\n    setVres(states.result);\n  };\n  var operate = function operate(d) {\n    if (d == \"AC\") {\n      clearScreen();\n      return;\n    }\n    if (d == \"BS\") {\n      states.valueScreen = vscreen.substring(0, vscreen.length - 1);\n      setVscreen(states.valueScreen);\n      return;\n    }\n    try {\n      states.result = eval(vscreen);\n      states.operated = true;\n      setVres(states.result);\n    } catch (_unused) {\n      states.result = \"Erro\";\n      states.operated = true;\n      setVres(states.result);\n    }\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"XxSusuxX\"\n    }), _jsx(Display, {\n      operator: vscreen,\n      result: vres\n    }), _jsxs(View, {\n      style: styles.buttons,\n      children: [_jsx(Buttons, {\n        label: \"AC\",\n        ac: true,\n        onClick: function onClick() {\n          clearScreen();\n        }\n      }), _jsx(Buttons, {\n        label: \"(\",\n        onClick: function onClick() {\n          addDigit(\"(\");\n        }\n      }), _jsx(Buttons, {\n        label: \")\",\n        onClick: function onClick() {\n          addDigit(\")\");\n        }\n      }), _jsx(Buttons, {\n        label: \"/\",\n        operator: true,\n        onClick: function onClick() {\n          addDigit(\"/\");\n        }\n      }), _jsx(Buttons, {\n        label: \"7\",\n        onClick: function onClick() {\n          addDigit(\"7\");\n        }\n      }), _jsx(Buttons, {\n        label: \"8\",\n        onClick: function onClick() {\n          addDigit(\"8\");\n        }\n      }), _jsx(Buttons, {\n        label: \"9\",\n        onClick: function onClick() {\n          addDigit(\"9\");\n        }\n      }), _jsx(Buttons, {\n        label: \"*\",\n        operator: true,\n        onClick: function onClick() {\n          addDigit(\"*\");\n        }\n      }), _jsx(Buttons, {\n        label: \"4\",\n        onClick: function onClick() {\n          addDigit(\"4\");\n        }\n      }), _jsx(Buttons, {\n        label: \"5\",\n        onClick: function onClick() {\n          addDigit(\"5\");\n        }\n      }), _jsx(Buttons, {\n        label: \"6\",\n        onClick: function onClick() {\n          addDigit(\"6\");\n        }\n      }), _jsx(Buttons, {\n        label: \"-\",\n        operator: true,\n        onClick: function onClick() {\n          addDigit(\"-\");\n        }\n      }), _jsx(Buttons, {\n        label: \"1\",\n        onClick: function onClick() {\n          addDigit(\"1\");\n        }\n      }), _jsx(Buttons, {\n        label: \"2\",\n        onClick: function onClick() {\n          addDigit(\"2\");\n        }\n      }), _jsx(Buttons, {\n        label: \"3\",\n        onClick: function onClick() {\n          addDigit(\"3\");\n        }\n      }), _jsx(Buttons, {\n        label: \"+\",\n        operator: true,\n        onClick: function onClick() {\n          addDigit(\"+\");\n        }\n      }), _jsx(Buttons, {\n        label: \"0\",\n        onClick: function onClick() {\n          addDigit(\"0\");\n        }\n      }), _jsx(Buttons, {\n        label: \".\",\n        onClick: function onClick() {\n          addDigit(\".\");\n        }\n      }), _jsx(Buttons, {\n        label: \"<--\",\n        bs: true,\n        operator: true,\n        onClick: function onClick() {\n          operate(\"BS\");\n        }\n      }), _jsx(Buttons, {\n        label: \"=\",\n        result: true,\n        onClick: function onClick() {\n          operate(\"=\");\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: \"#444\"\n  },\n  buttons: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  title: {\n    color: \"white\"\n  }\n});","map":{"version":3,"names":["React","useState","SafeAreaView","StyleSheet","Text","TextInput","TouchableHighlight","View","Entypo","clickSound","Display","Buttons","jsx","_jsx","jsxs","_jsxs","states","valueScreen","result","operated","point","App","_useState","_useState2","_slicedToArray","vscreen","setVscreen","_useState3","_useState4","vres","setVres","addDigit","d","audio","Audio","volume","play","clearScreen","operate","substring","length","eval","_unused","style","styles","container","children","title","operator","buttons","label","ac","onClick","bs","create","flex","justifyContent","alignItems","backgroundColor","flexDirection","flexWrap","color"],"sources":["C:/Users/Gabriel/Documents/ReactExpo/Calculadora-web/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableHighlight,\n  View,\n} from \"react-native\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport clickSound from \"./sounds/click.wav\";\nimport Display from \"./display\";\nimport Buttons from \"./buttons\";\n\nlet states = {\n  valueScreen: \"\",\n  result: 0,\n  operated: false,\n  point: false,\n};\n\nexport default function App() {\n  const [vscreen, setVscreen] = useState(states.valueScreen);\n  const [vres, setVres] = useState(states.result);\n\n  const addDigit = (d) => {\n    if (d == \"+\" || d == \"-\" || d == \"/\" || d == \"*\") {\n      states.point = false;\n    }\n    if (d == \".\" && !states.point) {\n      states.point = true;\n      states.operated = false;\n    } else if (d == \".\" && states.point) {\n      return;\n    }\n    if ((d == \"+\" || d == \"-\" || d == \"/\" || d == \"*\") && states.operated) {\n      states.valueScreen = states.result;\n      states.result = 0;\n    }\n\n    states.valueScreen = states.valueScreen + d;\n    setVscreen(states.valueScreen);\n    setVres(states.result);\n    states.operated = false;\n    const audio = new Audio(clickSound);\n    audio.volume = 0.3;\n    audio.play();\n  };\n\n  const clearScreen = () => {\n    states = {\n      valueScreen: \"\",\n      result: 0,\n      operated: false,\n      point: false,\n    };\n    setVscreen(states.valueScreen);\n    setVres(states.result);\n  };\n\n  const operate = (d) => {\n    if (d == \"AC\") {\n      clearScreen();\n      return;\n    }\n    if (d == \"BS\") {\n      states.valueScreen = vscreen.substring(0, vscreen.length - 1);\n      setVscreen(states.valueScreen);\n      return;\n    }\n    try {\n      states.result = eval(vscreen);\n      states.operated = true;\n      setVres(states.result);\n    } catch {\n      states.result = \"Erro\";\n      states.operated = true;\n      setVres(states.result);\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Text style={styles.title}>XxSusuxX</Text>\n\n      <Display operator={vscreen} result={vres} />\n      <View style={styles.buttons}>\n        <Buttons\n          label=\"AC\"\n          ac\n          onClick={() => {\n            clearScreen();\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"(\"\n          onClick={() => {\n            addDigit(\"(\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\")\"\n          onClick={() => {\n            addDigit(\")\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"/\"\n          operator\n          onClick={() => {\n            addDigit(\"/\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"7\"\n          onClick={() => {\n            addDigit(\"7\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"8\"\n          onClick={() => {\n            addDigit(\"8\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"9\"\n          onClick={() => {\n            addDigit(\"9\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"*\"\n          operator\n          onClick={() => {\n            addDigit(\"*\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"4\"\n          onClick={() => {\n            addDigit(\"4\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"5\"\n          onClick={() => {\n            addDigit(\"5\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"6\"\n          onClick={() => {\n            addDigit(\"6\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"-\"\n          operator\n          onClick={() => {\n            addDigit(\"-\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"1\"\n          onClick={() => {\n            addDigit(\"1\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"2\"\n          onClick={() => {\n            addDigit(\"2\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"3\"\n          onClick={() => {\n            addDigit(\"3\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"+\"\n          operator\n          onClick={() => {\n            addDigit(\"+\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"0\"\n          onClick={() => {\n            addDigit(\"0\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\".\"\n          onClick={() => {\n            addDigit(\".\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"<--\"\n          bs\n          operator\n          onClick={() => {\n            operate(\"BS\");\n          }}\n        ></Buttons>\n        <Buttons\n          label=\"=\"\n          result\n          onClick={() => {\n            operate(\"=\");\n          }}\n        ></Buttons>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: \"#444\",\n  },\n  buttons: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n  title: {\n    color: \"white\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}